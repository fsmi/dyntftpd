#!/usr/bin/python

from cStringIO import StringIO
import tftpy
import logging
import os
import file_ver_cmp
import filesys

logger = logging.getLogger('dyntftpd')

def open_newest_file(search_dir, prefix, path, match):
	prefix = prefix + '-'
	suffix = '-' + match.group(1)
	newest_fn = file_ver_cmp.find_highest_file_ver(prefix, suffix, search_dir)
	if newest_fn is not None:
		logger.info("determined newest file: %s" % newest_fn)
		return open(newest_fn, 'rb')
	else:
		return None

def match(path, match):
	logger.debug('Matched "%s"' % path)
	return StringIO('This is a sample dynamic file.')

def main():
	logger.setLevel(logging.DEBUG)
	tftpy.setLogLevel(logging.INFO)

	simul_fs = filesys.SimulatedFileSystem()

	simul_fs.add_handler('^/pxelinux.cfg/[0-9a-fA-F]{8}$', match)

	image_dir = '/var/tmp/boot/'
	simul_fs.add_handler('^/vmlinuz-([^/]+)',
			lambda p, m: open_newest_file(image_dir, 'vmlinuz', p, m))
	simul_fs.add_handler('^/initrd-([^/]+)',
			lambda p, m: open_newest_file(image_dir, 'initrd', p, m))

	native_fs = tftpy.TftpNativeFileSys('./tftp')

	fss = filesys.FileSystemStack()
	fss.add_file_sys(native_fs)
	fss.add_file_sys(simul_fs)

	server = tftpy.TftpCommonServer(fss)
	try:
		server.listen('127.0.0.1', 2069)
	except KeyboardInterrupt:
		pass

if __name__ == '__main__':
	main()

# vim:set ft=python ts=4:
